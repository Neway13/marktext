name: ReleaseNewayWin

on:
  workflow_dispatch: {}    

jobs:
  windows:
    runs-on: windows-latest
    continue-on-error: false
    timeout-minutes: 45

    env:
      MARKTEXT_IS_STABLE: 1
      MARKTEXT_EXIT_ON_ERROR: 1
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          check-latest: true
          cache: yarn
          cache-dependency-path: yarn.lock

      # Workaround: Fix native build failure due to outdated node-gyp version.
      - name: Fix node-gyp
        run: |
          npm install --global node-gyp@latest
          npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
          node-gyp install
        shell: pwsh

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}\node_modules
          key: ${{ runner.os }}-node_modules-cache-v1-${{ hashFiles(format('{0}{1}', github.workspace, '\yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-node_modules-cache-v1-

      - name: Cache Electron
        uses: actions/cache@v2
        with:
          path: ${{ env.LOCALAPPDATA }}\electron\Cache
          key: ${{ runner.os }}-electron-cache-v1-${{ hashFiles(format('{0}{1}', github.workspace, '\yarn.lock')) }}

      - name: Cache Electron-Builder
        uses: actions/cache@v2
        with:
          path: ${{ env.LOCALAPPDATA }}\electron-builder\cache
          key: ${{ runner.os }}-electron-builder-cache-v1-${{ hashFiles(format('{0}{1}', github.workspace, '\yarn.lock')) }}

      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile

      - name: Lint
        run: |
          yarn run lint
          yarn run validate-licenses

      - name: Run unit and E2E tests
        run: yarn run test

      - name: Build and release
        run: yarn run release:win --publish always

      - name: Calculate checksums
        run: |
          get-filehash -Algorithm SHA256 "build\marktext-setup.exe"
          get-filehash -Algorithm SHA256 "build\marktext-*-win.zip"
        shell: pwsh
      - name: upload file 
        uses: actions/upload-artifact@v2
        with:
          name: marktext_artifact
          path: |
            build\marktext-setup.exe
            build\marktext-*-win.zip
          
